以下是优化后的JSON配置文件代码：

```json
{
  "projectName": "EvalAI",
  "projectOwner": "CloudCV",
  "repository": {
    "type": "github",
    "host": "https://github.com"
  },
  "files": ["README.md"],
  "imageSize": 100,
  "contributors": {
    "perLine": 7,
    "list": []
  }
}
```

优化点：
1. 将 `repoType` 和 `repoHost` 合并为 `repository` 对象，提高可读性和可维护性。
2. 将 `contributorsPerLine` 和 `contributors` 合并为 `contributors` 对象，提高可读性和可维护性。
3. 使用更简洁的命名，如 `type` 和 `host`，提高代码可读性。

以下是实现登录流程的伪代码：

```javascript
// 登录流程伪代码
function login(username, password) {
  // 1. 验证用户名和密码是否为空
  if (!username || !password) {
    console.error("用户名和密码不能为空");
    return;
  }

  // 2. 发送登录请求到服务器
  fetch('/login', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ username, password })
  })
  .then(response => response.json())
  .then(data => {
    // 3. 校验登录结果
    if (data.success) {
      console.log("登录成功");
      // 设置登录状态和用户信息
      setLoginStatus(true);
      setUserInfo(data.userInfo);
    } else {
      console.error("登录失败：" + data.message);
    }
  })
  .catch(error => {
    console.error("登录请求失败：" + error.message);
  });
}

// 校验是否为管理员
function checkAdmin() {
  // 获取当前用户信息
  const userInfo = getUserInfo();
  
  // 校验用户角色是否为管理员
  if (userInfo && userInfo.role === 'admin') {
    console.log("当前用户是管理员");
    // 执行管理员相关操作
  } else {
    console.log("当前用户不是管理员");
  }
}

// JavaScript实现冒泡排序算法
function bubbleSort(arr) {
  let len = arr.length;
  for (let i = 0; i < len; i++) {
    for (let j = 0; j < len - i - 1; j++) {
      if (arr[j] > arr[j + 1]) {
        let temp = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = temp;
      }
    }
  }
  return arr;
}

// Python实现快速排序算法
def quick_sort(arr):
  if len(arr) <= 1:
    return arr
  pivot = arr[len(arr) // 2]
  left = [x for x in arr if x < pivot]
  middle = [x for x in arr if x == pivot]
  right = [x for x in arr if x > pivot]
  return quick_sort(left) + middle + quick_sort(right)
```

以上伪代码实现了登录流程、校验管理员、JavaScript冒泡排序和Python快速排序等功能。可以根据实际需求进一步扩展和完善。